class Solution {
public:
    int stoneGameII(vector<int>& piles) {
        int n = piles.size();
        vector<int> prefix(n + 1);
        for (int i = 0; i < n; i++) {
            prefix[i + 1] = prefix[i] + piles[i];
        }
        
        vector<vector<int>> dp(n, vector<int>(n + 1, 0));
        
        for (int i = n - 1; i >= 0; i--) {
            for (int m = 1; m <= n; m++) {
                if (i + 2 * m >= n) {
                    dp[i][m] = prefix[n] - prefix[i];
                } else {
                    int ans = INT_MIN;
                    for (int x = 1; x <= 2 * m; x++) {
                        ans = max(ans, prefix[i + x] - prefix[i] - dp[i + x][max(m, x)]);
                    }
                    dp[i][m] = ans;
                }
            }
        }
        
        return (prefix[n] + dp[0][1]) / 2;
    }
};